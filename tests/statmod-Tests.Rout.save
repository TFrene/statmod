
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(statmod)
> 
> set.seed(0); u <- runif(100)
> 
> ### fitNBP
> 
> y <- matrix(rnbinom(2*4,mu=4,size=1.5),2,4)
> lib.size <- rep(50000,4)
> group <- c(1,1,2,2)
> fitNBP(y,group=group,lib.size=lib.size)
$coefficients
              1         2
[1,] -10.414313 -10.81978
[2,]  -9.315701 -10.41431

$fitted.values
     [,1] [,2] [,3] [,4]
[1,]  1.5  1.5  1.0  1.0
[2,]  4.5  4.5  1.5  1.5

$dispersion
[1] 0.9886071

> 
> ### glmgam.fit
> 
> glmgam.fit(1,1)
$coefficients
[1] 1

$fitted.values
[1] 1

$deviance
[1] 0

$iter
[1] 1

> glmgam.fit(c(1,1),c(0,4))
$coefficients
[1] 2

$fitted.values
[1] 2 2

$deviance
[1] Inf

$iter
[1] 1

> glmgam.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=rchisq(5,df=1))
$coefficients
[1] 0.1873533 0.6578903

$fitted.values
[1] 0.8452436 0.5162985 0.5162985 0.1873533 0.1873533

$deviance
[1] 10.7196

$iter
[1] 12

> 
> ### glmnb.fit
> y <- rnbinom(5,mu=10,size=10)
> glmnb.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=y,dispersion=0.1)
$coefficients
[1]  2.3042476 -0.2210662

$fitted.values
[1]  8.029975  8.968465  8.968465 10.016639 10.016639

$deviance
[1] 0.5750191

$iter
[1] 3

$convergence
[1] "converged"

> glmnb.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=y,dispersion=runif(6))
$coefficients
[1]  2.2854591 -0.2049791

$fitted.values
[1] 8.008312 8.872615 8.872615 9.830198 9.830198

$deviance
[1] 0.150322

$iter
[1] 3

$convergence
[1] "converged"

> glmnb.fit(X=cbind(1,c(1,1,0,0,0)),y=c(0,0,6,2,9),dispersion=0.1)
$coefficients
[1]   1.734601 -17.510821

$fitted.values
[1] 1.407586e-07 1.407586e-07 5.666667e+00 5.666667e+00 5.666667e+00

$deviance
[1] 3.242349

$iter
[1] 17

$convergence
[1] "converged"

> 
> ### mixedModel2
> 
> y <- rnorm(6)
> x <- rnorm(6)
> z <- c(1,1,2,2,3,3)
> mixedModel2(y~x,random=z)
$varcomp
  Residual      Block 
 0.4541410 -0.1830805 

$reml.residuals
           [,1]
[1,] -0.9986108
[2,] -1.0304595
[3,] -1.3751171
[4,] -0.2236154

$se.varcomp
[1] 0.3764600 0.1997047

$coefficients
(Intercept)           x 
 -0.1622120  -0.1635664 

$residuals
[1]  0.18728174 -0.23383906  0.04655731  0.38053667  0.93837501  0.56278279

$fitted.values
[1]  0.42428865  0.43509063  0.06831659 -0.08278783  0.09651970  0.07022039

$effects
(Intercept)           x                                                 
 -1.8057315  -1.0181717  -0.8221429   0.4683771   1.5047294   0.9167959 

$weights
[1] 11.36623 11.36623 11.36623  2.20196  2.20196  2.20196

$rank
[1] 2

$assign
NULL

$qr
$qr
       (Intercept)          x
[1,]  8.258170e+00  2.8499558
[2,]  5.773503e-01  6.2248218
[3,]  5.773503e-01 -0.9371695
[4,] -1.994946e-17 -0.1206563
[5,] -3.989891e-17  0.1406694
[6,] -3.989891e-17  0.1023403

$qraux
[1] 1.577350 1.277298

$pivot
[1] 1 2

$tol
[1] 1e-07

$rank
[1] 2

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.1331802 0.1606472

> 
> ### mixedModel2Fit
> 
> y <- c(-1,1,-2,2,0.5)
> X <- matrix(1,5,1)
> Z <- model.matrix(~factor(c(1,1,2,2,3))-1)
> mixedModel2Fit(y,X,Z)
$varcomp
 Residual     Block 
 3.139385 -1.569692 

$reml.residuals
              [,1]
[1,] -1.675893e-13
[2,]  3.990825e-01
[3,] -4.427007e-01
[4,] -1.728975e+00

$se.varcomp
[1] 2.565233 1.282617

$coefficients
          x1 
4.651561e-08 

$residuals
[1]  6.578301e-08  6.578301e-08 -5.000000e-01  1.000000e+00  3.000000e+00

$fitted.values
[1] -6.578301e-08 -6.578301e-08 -4.651561e-08  0.000000e+00  0.000000e+00

$effects
           x1                                                         
 1.217242e-04  5.041983e-05 -3.990825e-01  5.643880e-01  1.693164e+00 

$weights
[1] 1.711972e+06 1.711972e+06 6.370674e-01 3.185338e-01 3.185338e-01

$rank
[1] 1

$assign
NULL

$qr
$qr
              [,1]
[1,]  2.616847e+03
[2,]  7.071067e-01
[3,]  3.050102e-04
[4,] -2.394471e-20
[5,]  2.394471e-20

$qraux
[1] 1.707107

$pivot
[1] 1

$tol
[1] 1e-07

$rank
[1] 1

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.0003821393

> 
> ### qresiduals
> 
> y <- rnorm(6)
> fit <- glm(y~1)
> residuals(fit)
         1          2          3          4          5          6 
 0.1570945 -1.0198715  0.6872330 -1.1702352  1.7359615 -0.3901824 
> qresiduals(fit)
         1          2          3          4          5          6 
 0.1425500 -0.9254473  0.6236059 -1.0618896  1.5752385 -0.3540575 
> qresiduals(fit,dispersion=1)
         1          2          3          4          5          6 
 0.1570945 -1.0198715  0.6872330 -1.1702352  1.7359615 -0.3901824 
> 
> if(require("MASS")) {
+ fit <- glm(Days~Age,family=negative.binomial(2),data=quine)
+ print(summary(qresiduals(fit)))
+ fit <- glm.nb(Days~Age,link=log,data = quine)
+ print(summary(qresiduals(fit)))
+ }
Loading required package: MASS
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-3.2820 -0.8242 -0.2252 -0.1500  0.7333  3.0360 
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-2.90900 -0.52600 -0.02938 -0.01204  0.67880  2.45600 
> 
> 
> proc.time()
   user  system elapsed 
   0.24    0.01    0.25 
