
R Under development (unstable) (2011-09-19 r57030)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(statmod)
> 
> set.seed(0); u <- runif(100)
> 
> ### fitNBP
> 
> y <- matrix(rnbinom(2*4,mu=4,size=1.5),2,4)
> lib.size <- rep(50000,4)
> group <- c(1,1,2,2)
> fitNBP(y,group=group,lib.size=lib.size)
$coefficients
              1         2
[1,] -10.414313 -10.81978
[2,]  -9.315701 -10.41431

$fitted.values
     [,1] [,2] [,3] [,4]
[1,]  1.5  1.5  1.0  1.0
[2,]  4.5  4.5  1.5  1.5

$dispersion
[1] 0.9886071

> 
> ### glmgam.fit
> 
> glmgam.fit(1,1)
$coefficients
[1] 1

$fitted.values
[1] 1

$deviance
[1] 0

$iter
[1] 1

> glmgam.fit(c(1,1),c(0,4))
$coefficients
[1] 2

$fitted.values
[1] 2 2

$deviance
[1] Inf

$iter
[1] 1

> glmgam.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=rchisq(5,df=1))
$coefficients
[1] 0.1873533 0.6578903

$fitted.values
[1] 0.8452436 0.5162985 0.5162985 0.1873533 0.1873533

$deviance
[1] 10.7196

$iter
[1] 12

> 
> ### glmnb.fit
> glmnb.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=rnbinom(5,mu=10,size=10),dispersion=0.1)
$coefficients
[1]  2.3042425 -0.2210549

$fitted.values
[1]  8.030025  8.968470  8.968470 10.016588 10.016588

$deviance
[1] 0.5750191

$iter
[1] 3

> glmnb.fit(X=cbind(1,c(1,1,0,0,0)),y=c(0,0,6,2,9),dispersion=0.1)
$coefficients
[1]   1.734601 -17.908551

$fitted.values
[1] 9.456772e-08 9.456772e-08 5.666667e+00 5.666667e+00 5.666667e+00

$deviance
[1] 3.242349

$iter
[1] 16

> 
> ### mixedModel2
> 
> y <- rnorm(6)
> x <- rnorm(6)
> z <- c(1,1,2,2,3,3)
> mixedModel2(y~x,random=z)
$varcomp
 Residual     Block 
0.3406135 0.1323808 

$reml.residuals
           [,1]
[1,] -0.6853893
[2,] -1.2419637
[3,] -1.0887135
[4,] -0.8958072

$se.varcomp
[1] 0.3405914 0.3519701

$coefficients
(Intercept)           x 
  0.8475217  -1.1648392 

$residuals
[1] -0.73655606 -0.06951713  0.80607318  0.50827187 -0.46637978 -0.46157999

$fitted.values
[1] -0.60885121 -0.23174585 -0.18912198 -1.28988687 -0.07255572 -0.96659819

$effects
(Intercept)           x                                                 
  0.7640923  -2.7963423   1.3554009   1.0563501  -0.7886822  -0.6519151 

$weights
[1] 1.651868 1.651868 1.651868 2.935879 2.935879 2.935879

$rank
[1] 2

$assign
NULL

$qr
$qr
       (Intercept)           x
[1,]  3.148207e+00  1.63463044
[2,]  5.773503e-01  2.40062506
[3,]  5.773503e-01  0.11551969
[4,] -6.042490e-17 -0.79036985
[5,] -1.208498e-16 -0.04445805
[6,] -1.208498e-16 -0.59227680

$qraux
[1] 1.577350 1.095929

$pivot
[1] 1 2

$tol
[1] 1e-07

$rank
[1] 2

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.3842867 0.4165582

> 
> ### mixedModel2Fit
> 
> y <- c(-1,1,-2,2,0.5)
> X <- matrix(1,5,1)
> Z <- model.matrix(~factor(c(1,1,2,2,3))-1)
> mixedModel2Fit(y,X,Z)
$varcomp
 Residual     Block 
 3.139385 -1.569692 

$reml.residuals
              [,1]
[1,] -1.675893e-13
[2,]  3.990825e-01
[3,] -4.427007e-01
[4,] -1.728975e+00

$se.varcomp
[1] 2.565233 1.282617

$coefficients
          x1 
4.651561e-08 

$residuals
[1]  6.578301e-08  6.578301e-08 -5.000000e-01  1.000000e+00  3.000000e+00

$fitted.values
[1] -6.578301e-08 -6.578301e-08 -4.651561e-08  0.000000e+00  0.000000e+00

$effects
           x1                                                         
 1.217242e-04  5.041983e-05 -3.990825e-01  5.643880e-01  1.693164e+00 

$weights
[1] 1.711972e+06 1.711972e+06 6.370674e-01 3.185338e-01 3.185338e-01

$rank
[1] 1

$assign
NULL

$qr
$qr
              [,1]
[1,]  2.616847e+03
[2,]  7.071067e-01
[3,]  3.050102e-04
[4,] -2.394471e-20
[5,]  2.394471e-20

$qraux
[1] 1.707107

$pivot
[1] 1

$tol
[1] 1e-07

$rank
[1] 1

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.0003821393

> 
> ### qresiduals
> 
> y <- rnorm(6)
> fit <- glm(y~1)
> residuals(fit)
         1          2          3          4          5          6 
 0.9681915 -0.5904443 -0.4296576  0.2329126 -0.9440534  0.7630511 
> qresiduals(fit)
         1          2          3          4          5          6 
 1.2502723 -0.7624691 -0.5548375  0.3007713 -1.2191016  0.9853646 
> qresiduals(fit,dispersion=1)
         1          2          3          4          5          6 
 0.9681915 -0.5904443 -0.4296576  0.2329126 -0.9440534  0.7630511 
> 
> if(require("MASS")) {
+ fit <- glm(Days~Age,family=negative.binomial(2),data=quine)
+ print(summary(qresiduals(fit)))
+ fit <- glm.nb(Days~Age,link=log,data = quine)
+ print(summary(qresiduals(fit)))
+ }
Loading required package: MASS
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-3.2450 -0.8763 -0.2195 -0.1567  0.7321  3.0350 
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-2.885000 -0.522800 -0.022250  0.001696  0.684200  2.488000 
> 
> 
