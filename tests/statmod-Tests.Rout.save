
R version 2.6.2 (2008-02-08)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(statmod)
> 
> set.seed(0); u <- runif(100)
> 
> ### fitNBP
> 
> y <- matrix(rnbinom(2*4,mu=4,size=1.5),2,4)
> lib.size <- rep(50000,4)
> group <- c(1,1,2,2)
> fitNBP(y,group=group,lib.size=lib.size)
$coefficients
             1         2
[1,] -10.41431 -10.81978
[2,]  -9.31570 -10.41431

$fitted.values
     [,1] [,2] [,3] [,4]
[1,]  1.5  1.5  1.0  1.0
[2,]  4.5  4.5  1.5  1.5

$dispersion
[1] 0.988607

> 
> ### glmgam.fit
> 
> glmgam.fit(1,1)
$coefficients
[1] 1

$fitted.values
[1] 1

$deviance
[1] 0

$maxit
[1] 50

$iter
[1] 1

> glmgam.fit(c(1,1),c(0,4))
$coefficients
[1] 2

$fitted.values
[1] 2 2

$deviance
[1] Inf

$maxit
[1] 50

$iter
[1] 1

> glmgam.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=rchisq(5,df=1))
$coefficients
[1] 0.1873533 0.6578903

$fitted.values
[1] 0.8452436 0.5162985 0.5162985 0.1873533 0.1873533

$deviance
[1] 10.71960

$maxit
[1] 50

$iter
[1] 12

> 
> ### mixedModel2
> 
> y <- rnorm(6)
> x <- rnorm(6)
> z <- c(1,1,2,2,3,3)
> mixedModel2(y~x,random=z)
$varcomp
  Residual      Block 
 1.6837981 -0.8385408 

$reml.residuals
           [,1]
[1,]  2.0136360
[2,]  0.2857285
[3,] -0.2287859
[4,] -1.5161401

$se.varcomp
[1] 1.4499512 0.7253608

$coefficients
(Intercept)           x 
 -0.0989657  -0.4178828 

$residuals
[1] -0.04955823  0.13348622 -0.08392799  0.31752684  1.05031395 -1.69434835

$fitted.values
[1] 0.4138452 0.3642090 0.3282191 0.2311494 0.2190641 0.2620726

$effects
(Intercept)           x                                                 
 -7.7934784   0.8071268  -2.0130206   0.5544485   1.1029734  -0.9545571 

$weights
[1] 148.8877711 148.8877711 148.8877711   0.5938954   0.5938954   0.5938954

$rank
[1] 2

$assign
NULL

$qr
$qr
       (Intercept)          x
[1,]  2.988857e+01 11.5715097
[2,]  5.773503e-01 -1.9314668
[3,]  5.773503e-01  0.8623454
[4,] -5.725192e-18 -0.2207018
[5,] -5.725192e-18 -0.2091628
[6,] -5.725192e-18 -0.2502274

$qraux
[1] 1.577350 1.318258

$pivot
[1] 1 2

$tol
[1] 1e-07

$rank
[1] 2

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.2032192 0.5177412

> 
> ### mixedModel2Fit
> 
> y <- c(-1,1,-2,2,0.5)
> X <- matrix(1,5,1)
> Z <- model.matrix(~factor(c(1,1,2,2,3))-1)
> mixedModel2Fit(y,X,Z)
$varcomp
 Residual     Block 
 3.139385 -1.569692 

$reml.residuals
              [,1]
[1,] -7.081629e-13
[2,]  3.990825e-01
[3,] -7.480047e-02
[4,]  1.783183e+00

$se.varcomp
[1] 2.562050 1.281025

$coefficients
          x1 
4.651561e-08 

$residuals
[1]  6.578301e-08  6.578301e-08 -5.000000e-01  1.000000e+00  3.000000e+00

$fitted.values
[1] -6.578301e-08 -6.578301e-08 -4.651561e-08  0.000000e+00  0.000000e+00

$effects
           x1                                                         
 1.217242e-04  5.041983e-05 -3.990825e-01  5.643880e-01  1.693164e+00 

$weights
[1] 1.711972e+06 1.711972e+06 6.370674e-01 3.185338e-01 3.185338e-01

$rank
[1] 1

$assign
NULL

$qr
$qr
              [,1]
[1,]  2.616847e+03
[2,]  7.071067e-01
[3,]  3.050102e-04
[4,] -4.788943e-20
[5,]  4.788943e-20

$qraux
[1] 1.707107

$pivot
[1] 1

$tol
[1] 1e-07

$rank
[1] 1

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.0003821393

> 
> ### qresiduals
> 
> y <- rnorm(6)
> fit <- glm(y~1)
> residuals(fit)
          1           2           3           4           5           6 
-1.32106735  0.42932049  0.38185530 -0.07833367  0.80828613 -0.22006089 
> qresiduals(fit)
         1          2          3          4          5          6 
-1.7706584  0.5754286  0.5118099 -0.1049925  1.0833654 -0.2949529 
> qresiduals(fit,dispersion=1)
          1           2           3           4           5           6 
-1.32106735  0.42932049  0.38185530 -0.07833367  0.80828613 -0.22006089 
> 
> ### limdil
> 
> #####################################
> # Test 1, when there is only 1 group
> #####################################
> Dose <- c(50,100,200,400,800)
> Responses <- c(2,6,9,15,21)
> Tested <- c(24,24,24,24,24)
> Group <- c(1,1,1,1,1)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
   Lower Estimate    Upper 
537.7392 403.0632 302.1166 

$test.unit.slope
    Chisq   P.value        df 
0.0666993 0.7962047 1.0000000 

> 
> ###################################
> # Test 2, when there is 1 group 
> # 1 with no responses
> ###################################
> Dose <- c(30000,20000,4000,500)
> Responses <- c(0,0,0,0)
> Tested <- c(6,6,6,6)
> Group <- c(1,1,1,1)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
   Lower Estimate    Upper 
     Inf      Inf 109155.3 

$test.unit.slope
  Chisq P.value      df 
     NA      NA       1 

> 
> ###################################
> # Test 3, when there is 1 group 
> # 1 with all responses
> ###################################
> Dose <- c(30000,20000,4000,500)
> Responses <- c(6,6,6,6)
> Tested <- c(6,6,6,6)
> Group <- c(1,1,1,1)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
   Lower Estimate    Upper 
535.4181   1.0000   1.0000 

$test.unit.slope
  Chisq P.value      df 
     NA      NA       1 

Warning messages:
1: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
2: In glm.fit(x = X[, "(Intercept)", drop = FALSE], y = Y, weights = weights,  :
  fitted probabilities numerically 0 or 1 occurred
> 
> ##################################
> # Test 4, when there are 2 groups
> # average response
> ##################################
> Dose <- c(30000,20000,4000,500,30000,20000,4000,500)
> Responses <- c(2,3,2,3,2,2,4,3)
> Tested <- c(6,6,6,6,6,6,6,6)
> Group <- c(1,1,1,1,2,2,2,2)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
           Lower Estimate    Upper
Group 1 50861.83 25241.38 12526.62
Group 2      Inf      Inf      Inf

$test.difference
    Chisq   P.value        df 
-733.5692    1.0000    1.0000 

$test.unit.slope
        Chisq       P.value            df 
 7.798966e+02 1.267588e-171  1.000000e+00 

Warning messages:
1: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
2: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
> 
> ##################################
> # Test 5, when there are 2 groups
> # 1 with nearly all responses
> # 1 with nearly no responses
> ##################################
> Dose <- c(30000,20000,4000,500,30000,20000,4000,500)
> Responses <- c(1,0,0,0,6,6,6,5)
> Tested <- c(6,6,6,6,6,6,6,6)
> Group <- c(1,1,1,1,2,2,2,2)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
               Lower    Estimate      Upper
Group 1 2194236.5859 311759.4552 44295.1132
Group 2     757.3843    279.0516   102.8141

$test.difference
   Chisq  P.value       df 
1718.006    0.000    1.000 

$test.unit.slope
    Chisq   P.value        df 
1.2761132 0.2586230 1.0000000 

Warning messages:
1: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
2: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
3: In glm.fit(x = X[, "(Intercept)", drop = FALSE], y = Y, weights = weights,  :
  fitted probabilities numerically 0 or 1 occurred
4: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  algorithm did not converge
5: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
> 
> ###################################
> # Test 6, when there is 2 groups, 
> # 1 with all responses
> # 1 with none responses
> ###################################
> Dose <- c(30000,20000,4000,500,30000,20000,4000,500)
> Responses <- c(0,0,0,0,6,6,6,6)
> Tested <- c(6,6,6,6,6,6,6,6)
> Group <- c(1,1,1,1,2,2,2,2)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
           Lower Estimate    Upper
Group 1      Inf      Inf 109155.3
Group 2 535.4181        1      1.0

$test.difference
   Chisq  P.value       df 
1730.095    0.000    1.000 

$test.unit.slope
       Chisq      P.value           df 
1.111911e-11 9.999973e-01 1.000000e+00 

Warning messages:
1: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
2: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
3: In glm.fit(x = X[, "(Intercept)", drop = FALSE], y = Y, weights = weights,  :
  fitted probabilities numerically 0 or 1 occurred
> 
> ##################################
> # Test 7, when there are 4 groups
> # 4 average response
> ##################################
> Dose <- c(30000,20000,4000,500,30000,20000,4000,500,30000,20000,4000,500,30000,20000,4000,500)
> Responses <- c(2,3,2,1,6,5,6,1,2,3,4,2,6,6,6,1)
> Tested <- c(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
> Group <- c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
           Lower  Estimate      Upper
Group 1 67165.43 31863.531 15116.1772
Group 2 10251.79  4508.961  1983.1397
Group 3 44525.85 22491.410 11361.1184
Group 4  3371.15  1369.054   555.9851

$test.difference
       Chisq      P.value           df 
4.113922e+01 6.109361e-09 3.000000e+00 

$test.unit.slope
       Chisq      P.value           df 
1.852803e+01 1.674236e-05 1.000000e+00 

> 
> ##################################
> # Test 8, when there are 4 groups 
> # 1 group with no response
> # 1 group with all response
> # 2 group average response
> ##################################
> Dose <- c(30000,20000,4000,500,30000,20000,4000,500,30000,20000,4000,500,30000,20000,4000,500)
> Responses <- c(0,0,0,0,6,5,6,1,2,3,4,2,6,6,6,6)
> Tested <- c(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6)
> Group <- c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4)
> 
> limdil(Responses,Dose,Tested,Group,test.unit.slope=TRUE)
$CI
             Lower  Estimate      Upper
Group 1        Inf       Inf 109155.282
Group 2 10251.7210  4508.941   1983.135
Group 3 44524.6844 22490.225  11360.221
Group 4   535.4181     1.000      1.000

$test.difference
   Chisq  P.value       df 
3027.683    0.000    3.000 

$test.unit.slope
       Chisq      P.value           df 
1.815141e+01 2.040178e-05 1.000000e+00 

Warning messages:
1: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
2: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
3: In glm.fit(x = X[, "(Intercept)", drop = FALSE], y = Y, weights = weights,  :
  fitted probabilities numerically 0 or 1 occurred
4: In glm.fit(x = X, y = Y, weights = weights, start = start, etastart = etastart,  :
  fitted probabilities numerically 0 or 1 occurred
> 
