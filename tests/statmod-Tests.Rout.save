
R version 2.8.0 (2008-10-20)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(statmod)
> 
> set.seed(0); u <- runif(100)
> 
> ### fitNBP
> 
> y <- matrix(rnbinom(2*4,mu=4,size=1.5),2,4)
> lib.size <- rep(50000,4)
> group <- c(1,1,2,2)
> fitNBP(y,group=group,lib.size=lib.size)
$coefficients
             1         2
[1,] -10.41431 -10.81978
[2,]  -9.31570 -10.41431

$fitted.values
     [,1] [,2] [,3] [,4]
[1,]  1.5  1.5  1.0  1.0
[2,]  4.5  4.5  1.5  1.5

$dispersion
[1] 0.988607

> 
> ### glmgam.fit
> 
> glmgam.fit(1,1)
$coefficients
[1] 1

$fitted.values
[1] 1

$deviance
[1] 0

$maxit
[1] 50

$iter
[1] 1

> glmgam.fit(c(1,1),c(0,4))
$coefficients
[1] 2

$fitted.values
[1] 2 2

$deviance
[1] Inf

$maxit
[1] 50

$iter
[1] 1

> glmgam.fit(X=cbind(1,c(1,0.5,0.5,0,0)),y=rchisq(5,df=1))
$coefficients
[1] 0.1873533 0.6578903

$fitted.values
[1] 0.8452436 0.5162985 0.5162985 0.1873533 0.1873533

$deviance
[1] 10.71960

$maxit
[1] 50

$iter
[1] 12

> 
> ### mixedModel2
> 
> y <- rnorm(6)
> x <- rnorm(6)
> z <- c(1,1,2,2,3,3)
> mixedModel2(y~x,random=z)
$varcomp
  Residual      Block 
 1.6837981 -0.8385408 

$reml.residuals
           [,1]
[1,]  2.0136360
[2,]  0.2857285
[3,] -0.3039966
[4,] -1.5028673

$se.varcomp
[1] 1.4499512 0.7253608

$coefficients
(Intercept)           x 
 -0.0989657  -0.4178828 

$residuals
[1] -0.04955823  0.13348622 -0.08392799  0.31752684  1.05031395 -1.69434835

$fitted.values
[1] 0.4138452 0.3642090 0.3282191 0.2311494 0.2190641 0.2620726

$effects
(Intercept)           x                                                 
 -7.7934784   0.8071268  -2.0130206   0.5544485   1.1029734  -0.9545571 

$weights
[1] 148.8877711 148.8877711 148.8877711   0.5938954   0.5938954   0.5938954

$rank
[1] 2

$assign
NULL

$qr
$qr
       (Intercept)          x
[1,]  2.988857e+01 11.5715097
[2,]  5.773503e-01 -1.9314668
[3,]  5.773503e-01  0.8623454
[4,] -2.862596e-18 -0.2207018
[5,] -5.725192e-18 -0.2091628
[6,] -5.725192e-18 -0.2502274

$qraux
[1] 1.577350 1.318258

$pivot
[1] 1 2

$tol
[1] 1e-07

$rank
[1] 2

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.2032192 0.5177412

> 
> ### mixedModel2Fit
> 
> y <- c(-1,1,-2,2,0.5)
> X <- matrix(1,5,1)
> Z <- model.matrix(~factor(c(1,1,2,2,3))-1)
> mixedModel2Fit(y,X,Z)
$varcomp
 Residual     Block 
 3.139385 -1.569692 

$reml.residuals
              [,1]
[1,] -2.213275e-13
[2,]  3.990825e-01
[3,] -4.427007e-01
[4,] -1.728975e+00

$se.varcomp
[1] 2.565233 1.282617

$coefficients
          x1 
4.651561e-08 

$residuals
[1]  6.578301e-08  6.578301e-08 -5.000000e-01  1.000000e+00  3.000000e+00

$fitted.values
[1] -6.578301e-08 -6.578301e-08 -4.651561e-08  0.000000e+00  0.000000e+00

$effects
           x1                                                         
 1.217242e-04  5.041983e-05 -3.990825e-01  5.643880e-01  1.693164e+00 

$weights
[1] 1.711972e+06 1.711972e+06 6.370674e-01 3.185338e-01 3.185338e-01

$rank
[1] 1

$assign
NULL

$qr
$qr
              [,1]
[1,]  2.616847e+03
[2,]  7.071067e-01
[3,]  3.050102e-04
[4,] -2.394471e-20
[5,]  2.394471e-20

$qraux
[1] 1.707107

$pivot
[1] 1

$tol
[1] 1e-07

$rank
[1] 1

attr(,"class")
[1] "qr"

$df.residual
[1] 4

$se.coefficients
[1] 0.0003821393

> 
> ### qresiduals
> 
> y <- rnorm(6)
> fit <- glm(y~1)
> residuals(fit)
          1           2           3           4           5           6 
-1.32106735  0.42932049  0.38185530 -0.07833367  0.80828613 -0.22006089 
> qresiduals(fit)
         1          2          3          4          5          6 
-1.7706584  0.5754286  0.5118099 -0.1049925  1.0833654 -0.2949529 
> qresiduals(fit,dispersion=1)
          1           2           3           4           5           6 
-1.32106735  0.42932049  0.38185530 -0.07833367  0.80828613 -0.22006089 
> 
> if(require("MASS")) {
+ fit <- glm(Days~Age,family=negative.binomial(2),data=quine)
+ print(summary(qresiduals(fit)))
+ fit <- glm.nb(Days~Age,link=log,data = quine)
+ print(summary(qresiduals(fit)))
+ }
Loading required package: MASS
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
-2.9810 -0.8111 -0.2170 -0.1510  0.7094  3.0480 
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-2.604000 -0.494000 -0.029410  0.001517  0.682600  2.489000 
